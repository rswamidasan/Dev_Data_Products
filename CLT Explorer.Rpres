Central Limit Theorem Explorer
========================================================
author: Robin Swamidasan
date: `r date()`
font-family: 'Calibri'

Developing Data Products - Course Project


CLT Explorer - Motivation
========================================================
type: sub-section

Although the Central Limit Theorem is the basis for many procedures in Data Science, such as Hypothesis Testing and Regression Modeling, it is counter-intuitive and its significance is often obscured. The CLT Explorer helps develop an intuitive understanding through visual and interactive means.

- Its applicability regardless of the underlying distribution.
- The distinction between **Sample Size** and ***Number of Samples***.
- The dependence of Sample Means Variance on Sample Size.
- The insensitivity of Variance to the Number of Samples.
- <small>for instance, with Exponentials a Sample Size of 100 and 40 Samples will have a lower Variance than a Sample Size of 40 and 1,000 Samples.</small>


CLT Explorer - Features
========================================================
type: sub-section
transition: zoom
incremental: true

The app displays the density histogram and reference plots for the means of samples and a single sample based on user inputs of distribution type, sample size and number of samples via:

- A drop-down menu with 4 distributions - Exponential, Uniform, Triangular, and an artificial, discrete Step Function.
- Slider inputs for Sample Size and the Number of Samples.
- A separate tab for summary statistics of Sample Means, a Single Sample and Total Population.

The app is designed to add new distributions with ***< 10 lines of code***.

```{r, echo = FALSE}

xArt <- c(1, 6, 18)             # vector of integers to sample
pArt <- c(0.4, 0.1, 0.5)        # probability weights for elements in xArt
                                # sum of pArt = 1; Mean of distribution = 10.
Max_SS  <- 500      # Population
Max_NS  <- 500      # Size

SS  <- 25          # Sample Size
NS  <- 30          # Number of Samples

set.seed(1)

POP <- matrix(sample(xArt, Max_NS * Max_SS, replace = TRUE, prob = pArt), ncol = Max_SS)

SMN <- apply(POP[1:NS, 1:SS], 1, mean)  # Calculate Mean of each Sample.
SMX <- POP[1,1:SS]                      # take one sample

mMu  <- round(mean(SMN), 2)         # Determine Mean and
mVar <- round(var(SMN), 2)          # Variance of the Sample Means.
mSE  <- round(sqrt(var(SMN)), 2)    # Std. Error of Sample Mean.

sMu  <- round(mean(SMX), 2)         # Determine Mean and
sVar <- round(var(SMX), 2)          # Variance of the one Sample.

pMu   <- sum(xArt * pArt)                       # Mean and Variance for
pVar  <- round(sum((xArt - pMu)^2 * pArt), 2)   ## infinite population

##  Statistics predicted by Central Limit Theorem
cMu  <- pMu
cVar <- round(pVar/SS, 2)
cSE  <- round(sqrt(pVar/SS), 2)

##  To scale the Y-axis of the plots
# yM    <- hist(SMN, breaks = seq(0, 100, by = 1), plot = FALSE)
# yMmax <- max(yM$density) * 1.25
# yS    <- hist(SMX, breaks = seq(0, 100, by = 1), plot = FALSE)
# ySmax <- max(yS$density) * 1.25

yMmax <- 0.4; ySmax <- 0.6

##  Scaling the Y-axis requires scaling the y coordinates of the text
yMText <- c(rep(0.64*yMmax, 3), rep(0.58*yMmax, 4), rep(0.52*yMmax, 4), 0.46*yMmax)
ySText <- c(rep(0.64*ySmax, 2), rep(0.58*ySmax, 3), rep(0.52*ySmax, 3), 0.46*ySmax)

xPop  <- c(0, 0, 1, 1, 5, 5, 6, 6, 17, 17, 18, 18, 30)
yPop  <- c(0, 0.4, 0.4, 0, 0, 0.1, 0.1, 0, 0, 0.5, 0.5, 0, 0)
qN <- quantile(SMN, probs = c(0.25, 0.5, 0.75))
qX <- quantile(SMX, probs = c(0.25, 0.5, 0.75))

#lText <- c("mu", "Var", "CLT Prediction", tMu, tVar, "from Simulation", sMu, sVar)
#xText <- c(22, 24, 18, 22, 24, 18, 22, 24)
##  Text and location coordinate for Means of Samples plot
mText <- c("mu", "Var", "SE *", "CLT Prediction", cMu, cVar, cSE,
                                 "from Simulation", mMu, mVar, mSE,
                                "* Standard Error of Sample Means")

xMText <- c(20, 22, 24, 16, 20, 22, 24, 16, 20, 22, 24, 19)
#yMText <- c(0.3, 0.3, 0.3, 0.25, 0.25, 0.25, 0.25, 0.2, 0.2, 0.2, 0.2, 0.15)

##  Text and location coordinate for Samples plot
sText <- c("mu", "Var", "Sample", sMu, sVar, "Population *", pMu, pVar,
                                                "* Infinite Population assumed")
xSText <- c(22, 24, 20, 22, 24, 20, 22, 24, 22)



#yText <- c(rep(0.64*yNmax, 2), rep(0.58*yNmax, 3), rep(0.52*yNmax, 3))

xSeq <- seq(0, 30, by = 0.5)
yNorm <- dnorm(xSeq, mean = cMu, sd = sqrt(cVar))

```

CLT Explorer - Sample Plot
========================================================
type: sub-section

```{r, echo = FALSE, fig.height=7, fig.width=16}
par(mfrow = c(1, 2))

hist(SMX, breaks = seq(0, 100, by = 1), prob = TRUE,
            main = paste("Distribution of ", SS, " Random Artificials", sep = ""),
            col = "grey", border = "white", xlab = "Random Artificial Variables",
            lab.cex = 1.5, ylim = c(0, ySmax), xlim = c(0, 25))
grid(col = "grey")
lines(xPop, yPop, lty = 2, col = 139, lwd = 2)
abline(v = mean(SMX), col = "black", lwd = 1)
abline(v = qX, col = "orange", lwd = 1)
legend('topright', c("Quartiles", "Mean", "Sample Density", "Population Density"), cex = 0.9,
        lty = c(1, 1, 1, 2), lwd = c(1, 1, 7, 2), col = c("orange", "black", "grey", 139))
text(xSText, ySText, labels = sText, cex = 0.9)

hist(SMN, breaks = seq(0, 100, by = 1), prob = TRUE,
            main = paste("Distribution of Means from ", NS,
                            " Samples of ", SS, " Artificials", sep = ""),
            col = "grey", border = "white",
            xlab = "Sample Means", ylim = c(0, yMmax), xlim = c(0, 25))
grid(col = "grey")
lines(xSeq, yNorm, lty = 2, col = 139, lwd = 2)
abline(v = sMu, col = "black", lwd = 1)
abline(v = qN, col = "orange", lwd = 1)
legend('topright', c("Quartiles", "Mean", "Sample Means Density",  "Normal Density"), cex = 0.9,
        lty = c(1, 1, 1, 2), lwd = c(1, 1, 7, 2), col=c("orange", "black", "grey", 139))
text(xMText, yMText, labels = mText, cex = 0.9)
```
<small>The CLT Explorer in action on a discrete Step Function defined by the integers `r xArt` and probability weights of `r pArt` respectively.</small>

<small>Sample Size = `r SS`, Number of Samples = `r NS`.</small>

CLT Explorer - Availability
========================================================
type: sub-section
incremental : true

The **CLT Explorer** was developed in R using the **shiny** library and is ready for use
at the **shinyapps.io** website, courtesy **RStudio**.

Consolidate your understanding of this important concept in Data Science by checking out the
**CLT Explorer** [here](https://rswamidasan.shinyapps.io/CLT-Explorer).

The Explorer is freely available as an educational aid for courses like ***Statistical Inference***
in the *JHU Data Science* track at *Coursera*.

Source code for the **CLT Explorer** application and this presentation may be found at the [author's GitHub repo](https://github.com/rswamidasan/Dev_Data_Products).

